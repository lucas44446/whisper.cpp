name: Build whisper.wasm demo

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      # ðŸ”§ KONFIGURUJEMY Z ROOTA REPO, NIE z examples/
      - name: Configure (emcmake)
        run: |
          emcmake cmake -S . -B build-wasm \
            -DWHISPER_WASM=ON \
            -DGGML_WASM=ON \
            -DGGML_WASM_SIMD=ON

      # ðŸ›  Budujemy konkretny target demo WASM
      - name: Build target
        run: cmake --build build-wasm -j 4 --target whisper.wasm

      # ðŸ“¦ Zbieramy pliki demo do artefaktu
      - name: Collect demo files
        run: |
          mkdir -p dist
          # whisper.wasm
          for p in \
            build-wasm/bin/whisper.wasm \
            build-wasm/examples/whisper.wasm/whisper.wasm \
            build-wasm/whisper.wasm/whisper.wasm
          do
            [ -f "$p" ] && cp -v "$p" dist/whisper.wasm
          done

          # main.js
          for p in \
            build-wasm/examples/whisper.wasm/main.js \
            build-wasm/whisper.wasm/main.js \
            examples/whisper.wasm/main.js
          do
            [ -f "$p" ] && cp -v "$p" dist/main.js
          done

          # index.html (jeÅ›li nie powstaÅ‚, uÅ¼yj szablonu)
          for p in \
            build-wasm/examples/whisper.wasm/index.html \
            build-wasm/whisper.wasm/index.html
          do
            [ -f "$p" ] && cp -v "$p" dist/index.html
          done
          [ -f dist/index.html ] || cp -v examples/whisper.wasm/index-tmpl.html dist/index.html

          ls -la dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: whisper-wasm-demo
          path: dist/*
